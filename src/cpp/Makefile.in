CXX=@CXX@
SWIG=@SWIGBIN@

BUILD_DIR=../../.build

CXXFLAGS= -I. @CXXFLAGS@ @CPPFLAGS@
SWIGFLAGS= @CPPFLAGS@ -c++ -builtin -keyword
LDFLAGS= @LDFLAGS@
LDLIBS= -lunqlite

WRAPPER_LIBRARY=$(BUILD_DIR)/_pyunqliteimp.la

all: wrapper

dirs:
	mkdir -p $(BUILD_DIR)

clean:
	$(RM) -r $(BUILD_DIR)

WRAPPER_MODULES=$(BUILD_DIR)/pyunqliteimp_wrap.lo \
	$(BUILD_DIR)/UnqliteDatabaseImp.lo \
	$(BUILD_DIR)/UnqliteCursor.lo \
	$(BUILD_DIR)/UnqliteException.lo \
	$(BUILD_DIR)/ValueBuffer.lo
	
WRAPPER_HEADERS=UnqliteCommon.h \
	UnqliteDatabaseImp.h \
	UnqliteCursor.h \
	UnqliteException.h \
	ValueBuffer.h

wrapper: $(WRAPPER_LIBRARY)

$(WRAPPER_LIBRARY): $(WRAPPER_MODULES) 
	libtool --mode=link $(CXX) -shared -module $(LDFLAGS) -rpath @prefix@/lib -o $@ $^ $(LDLIBS)

$(BUILD_DIR)/%.lo: %.cpp %.h dirs
	libtool --mode=compile $(CXX) -shared -c $(CXXFLAGS) -o $@ $<

$(BUILD_DIR)/%_wrap.lo: $(BUILD_DIR)/%_wrap.cpp
	libtool --mode=compile $(CXX) -shared -c $(CXXFLAGS) -o $@ $<

pyunqlite.i: valuebuffer.i 

$(BUILD_DIR)/%_wrap.cpp: %.i $(WRAPPER_HEADERS) dirs
	$(SWIG) $(SWIGFLAGS) -python -o $@ $<

.PHONY: clean wrapper dirs
.SECONDARY: $(BUILD_DIR)/pyunqliteimp_wrap.cpp
